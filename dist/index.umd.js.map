{
  "version": 3,
  "sources": ["../src/toaster.js", "../src/index.umd.js"],
  "sourcesContent": ["// @ts-check\r\n\r\nexport const TOAST_DURATION = 10_000;\r\nexport const TOAST_CONTAINER_ID = \"__toastmynuts__\";\r\nexport const TOAST_WRAPPER_ID = \"__toastmynuts__wrapper\";\r\nexport const TOAST_CLASS = \"__toastmynuts__toast\";\r\nexport const TOAST_MESSAGE_CLASS = \"__toastmynuts__message\";\r\nexport const TOAST_CLOSE_BTN_CLASS = \"__toastmynuts__close-btn\";\r\nexport const TOAST_DEFAULT_POSITION = { x: \"middle\", y: \"top\" };\r\nexport const TOAST_MAX_VISIBLE_TOASTS = 3;\r\n\r\nexport function genRandomId() {\r\n    return Math.random().toString(16).slice(2);\r\n}\r\n\r\n/**\r\n * There should only be one instance of a\r\n * Toaster and this is not available externally.\r\n */\r\nexport class Toaster {\r\n    /**\r\n     * @private\r\n     * @type {Toaster}\r\n     */\r\n    static _instance;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Toast[]}\r\n     */\r\n    _toasts;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Toast[]}\r\n     *\r\n     *\r\n     * To avoid a race condition for moving toasts upwards when removing a toast,\r\n     * where in the loop, they'd have the same reference to the toast array before the\r\n     * previous toasts were removed (they are still in an exit animation and yet to be removed),\r\n     * we add them to a toBeRemovedArray so we can remove them from the main toast array\r\n     */\r\n    _toastToBeRemoved;\r\n\r\n    /**\r\n     * @private\r\n     * @type {ToastConfig | undefined}\r\n     */\r\n    static _config;\r\n\r\n    /**\r\n     * @private\r\n     * @type {(() => void) | undefined}\r\n     */\r\n    static _toastContainerMouseEnterListener;\r\n\r\n    /**\r\n     * @private\r\n     * @type {(() => void) | undefined}\r\n     */\r\n    static _toastContainerMouseLeaveListener;\r\n\r\n    /**\r\n     * @private\r\n     * @type {((evt: KeyboardEvent) => void) | undefined}\r\n     */\r\n    static _toastContainerKeyDownListener;\r\n\r\n    /**\r\n     * @private\r\n     * @type {((evt: KeyboardEvent) => void) | undefined}\r\n     */\r\n    static _toastContainerKeyUpListener;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number | undefined}\r\n     */\r\n    static _mouseLeaveEnterListenerDebouncer;\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    constructor() {\r\n        this._toasts = [];\r\n        this._toastToBeRemoved = [];\r\n    }\r\n\r\n    /**\r\n     * @returns {Toaster}\r\n     * @param {ToastConfig | undefined} config\r\n     */\r\n    static getInstance(config) {\r\n        if (!Toaster._instance) {\r\n            Toaster._instance = new Toaster();\r\n            Toaster._config = config;\r\n        }\r\n\r\n        return Toaster._instance;\r\n    }\r\n\r\n    /**\r\n     * @param {string} message\r\n     * @param {ToastType} [type]\r\n     */\r\n    async addToast(message, type = \"neutral\") {\r\n        const toastContainer = this._getOrCreateToastContainer();\r\n        const toastId = genRandomId();\r\n        const [\r\n            closeBtn,\r\n            closeBtnAbortController\r\n        ] = this._createCloseBtn(toastId);\r\n        const toastElement = this._createToastElement(toastId, type);\r\n        const toastRelativeContainer = document.createElement(\"div\");\r\n        const messageElement = this._createMessageElement(message);\r\n        const timeout = setTimeout(() => {\r\n            if (Toaster._config && Toaster._config.ignoreErrors) {\r\n                try {\r\n                    this.removeToast(toastId);\r\n                } catch (_err) {}\r\n            } else {\r\n                this.removeToast(toastId);\r\n            }\r\n        }, TOAST_DURATION);\r\n\r\n        toastRelativeContainer.appendChild(messageElement);\r\n        toastRelativeContainer.appendChild(closeBtn);\r\n        toastElement.appendChild(toastRelativeContainer);\r\n        toastContainer.prepend(toastElement);\r\n\r\n        const originalHeight = toastElement.style.height;\r\n\r\n        toastElement.style.height = \"auto\";\r\n\r\n        const packedHeight = toastElement.getBoundingClientRect().height;\r\n        const packedHeightString = `${packedHeight}px`;\r\n\r\n        toastElement.style.height = originalHeight;\r\n        toastContainer.style.setProperty(\"--_front-toast-height\", packedHeightString);\r\n        toastElement.style.setProperty(\"--_initial-height\", packedHeightString);\r\n\r\n        toastElement.removeAttribute(\"data-toast-state\");\r\n        this._moveToastsDown(packedHeight);\r\n\r\n        this._toasts.push({\r\n            _message: message,\r\n            _type: type,\r\n            _controllers: [closeBtnAbortController],\r\n            _timeout: timeout,\r\n            _duration: TOAST_DURATION,\r\n            _id: toastId,\r\n        });\r\n\r\n        return toastId;\r\n    }\r\n\r\n    /**\r\n     * @param {string} toastId\r\n     */\r\n    removeToast(toastId) {\r\n        /**\r\n         * @type {Toast | undefined}\r\n         */\r\n        let toast;\r\n        /**\r\n         * @type {number | undefined}\r\n         */\r\n        let toastIdx;\r\n\r\n        for (let i = 0; i < this._toasts.length; ++i) {\r\n            if (this._toasts[i]._id === toastId) {\r\n                toast = this._toasts[i];\r\n                toastIdx = i;\r\n            }\r\n        }\r\n\r\n        if (!toast || toastIdx === undefined) {\r\n            throw new Error(\"[ToastMyNuts] Could not find toast with ID \" + toastId + \" virtually\");\r\n        }\r\n\r\n        /**\r\n         * @type {HTMLElement | null}\r\n         */\r\n        const toastElement = document.getElementById(toast._id);\r\n\r\n        if (!toastElement) {\r\n            throw new Error(\"[ToastMyNuts] Could not find toast with ID \" + toastId + \" in the DOM\");\r\n        }\r\n\r\n        const isExiting = toastElement.getAttribute(\"data-toast-state\") === \"closing\";\r\n\r\n        if (isExiting) {\r\n            return;\r\n        }\r\n\r\n        toastElement.setAttribute(\"data-toast-state\", \"closing\");\r\n\r\n        while (toast._controllers.length !== 0) {\r\n            toast._controllers.pop()?.abort();\r\n        }\r\n\r\n        const toastElementTransitionDuration = parseFloat(getComputedStyle(toastElement).transitionDuration);\r\n        this._moveToastsUp(toastIdx);\r\n        this._toastToBeRemoved.push(toast);\r\n        // Remove the array so that, if a user instantly closes another toast,\r\n        // the then call to _moveToastsUp will reference the updated state.\r\n\r\n        if (toast._timeout !== undefined) {\r\n            clearTimeout(toast._timeout);\r\n        }\r\n\r\n        this._toasts.splice(toastIdx, 1);\r\n\r\n        setTimeout(() => {\r\n            // The toast idx might change already when this timeout is called,\r\n            // so we find it again.\r\n\r\n            /**\r\n             * @type {Toast | undefined}\r\n             */\r\n            let toast;\r\n            let toastIdx;\r\n\r\n            for (let i = 0; i < this._toastToBeRemoved.length; ++i) {\r\n                if (this._toastToBeRemoved[i]._id === toastId) {\r\n                    toast = this._toastToBeRemoved[i];\r\n                    toastIdx = i;\r\n                }\r\n            }\r\n\r\n            if (!toast || toastIdx === undefined) {\r\n                throw new Error(\"[ToastMyNuts] Could not find toast with ID \" + toastId + \" virtually\");\r\n            }\r\n\r\n            const toastElement = document.getElementById(toast._id);\r\n\r\n            // TODO: Find a way for the toast Element to exist when toasts are removed\r\n            // almost instantly one after the other. For some reason, it doesn't exist,\r\n            // but we still successfully execute everything else.\r\n            toastElement?.remove();\r\n            this._toastToBeRemoved.splice(toastIdx, 1);\r\n\r\n            if (this._toasts.length === 0) {\r\n                const toastWrapper = document.getElementById(TOAST_WRAPPER_ID);\r\n                const toastContainer = document.getElementById(TOAST_CONTAINER_ID);\r\n\r\n                if (Toaster._toastContainerMouseEnterListener) {\r\n                    toastContainer?.removeEventListener(\"pointerenter\", Toaster._toastContainerMouseEnterListener);\r\n                }\r\n\r\n                if (Toaster._toastContainerMouseLeaveListener) {\r\n                    toastContainer?.removeEventListener(\"pointerleave\", Toaster._toastContainerMouseLeaveListener);\r\n                }\r\n\r\n                if (Toaster._toastContainerKeyDownListener) {\r\n                    window.removeEventListener(\"keydown\", Toaster._toastContainerKeyDownListener);\r\n                }\r\n\r\n                if (Toaster._toastContainerKeyUpListener) {\r\n                    window.removeEventListener(\"keyup\", Toaster._toastContainerKeyUpListener);\r\n                }\r\n\r\n                toastWrapper?.remove();\r\n            }\r\n        }, toastElementTransitionDuration * 1000);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _removeTimeoutOfToasts() {\r\n        for (let i = 0; i < this._toasts.length; ++i) {\r\n            const toast = this._toasts[i];\r\n\r\n            if (toast._timeout) {\r\n                clearTimeout(toast._timeout);\r\n                this._toasts[i]._timeout = undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @param {number} start\r\n     * Used when a toast is removed\r\n     */\r\n    _moveToastsUp(start) {\r\n        const maxVisibleToasts = Toaster._config?.maxVisibleToasts ?? TOAST_MAX_VISIBLE_TOASTS;\r\n\r\n        for (let i = 0; i < start; ++i) {\r\n            const toast = this._toasts[i];\r\n\r\n            if (!toast) {\r\n                throw new Error(\"[ToastMyNuts] Could not find toast with index \" + i + \" virtually\");\r\n            }\r\n\r\n            /**\r\n             * @type {HTMLElement | null}\r\n             */\r\n            const toastElement = document.getElementById(toast._id);\r\n\r\n            if (!toastElement) {\r\n                throw new Error(\"[ToastMyNuts] Could not find toast with ID \" + toast._id + \" in the DOM\");\r\n            }\r\n\r\n            let heightOffset = 0;\r\n\r\n            // Don't include the height of the toast that will be moved\r\n            for (let j = i + 1; j < this._toasts.length; ++j) {\r\n                // Don't include the height of the toast that is being removed\r\n                if (j === start) {\r\n                    continue;\r\n                }\r\n\r\n                const toast = this._toasts[j];\r\n\r\n                /**\r\n                 * @type {HTMLElement | null}\r\n                 */\r\n                const toastElement = document.getElementById(toast._id);\r\n\r\n                if (!toastElement) {\r\n                    throw new Error(\"[ToastMyNuts] Could not find toast with ID \" + toast._id + \" in the DOM\");\r\n                }\r\n\r\n                const initialHeight = parseFloat(toastElement.style.getPropertyValue(\"--_initial-height\"));\r\n\r\n                heightOffset += initialHeight;\r\n            }\r\n\r\n            toastElement.style.setProperty(\"--_height-offset\", `${heightOffset}px`);\r\n            // -2 because we need to account for the toast that will be removed.\r\n            toastElement.style.setProperty(\"--_idx\", (this._toasts.length - i - 2).toString());\r\n\r\n            if (i === this._toasts.length - 2) {\r\n                toastElement.setAttribute(\"data-front-toast\", \"true\");\r\n            }\r\n\r\n            if (this._toasts.length - i <= maxVisibleToasts + 1) {\r\n                if (toastElement.getAttribute(\"data-toast-state\") === \"hidden\") {\r\n                    toastElement.removeAttribute(\"data-toast-state\");\r\n                    toastElement.removeAttribute(\"aria-hidden\");\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = start + 1; i < this._toasts.length; ++i) {\r\n            const toast = this._toasts[i];\r\n            /**\r\n             * @type {HTMLElement | null}\r\n             */\r\n            const toastElement = document.getElementById(toast._id);\r\n\r\n            if (!toastElement) {\r\n                throw new Error(\"[ToastMyNuts] Could not find toast with ID \" + toast._id + \" in the DOM\");\r\n            }\r\n\r\n            toastElement.style.setProperty(\"--_z-idx\", (i - 1).toString());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @param {number} baseHeightOffset\r\n     * Used when a new toast is added\r\n     */\r\n    _moveToastsDown(baseHeightOffset) {\r\n        const maxVisibleToasts = Toaster._config?.maxVisibleToasts ?? TOAST_MAX_VISIBLE_TOASTS;\r\n\r\n        for (let i = 0; i < this._toasts.length; ++i) {\r\n            const toast = this._toasts[i];\r\n            const toastElement = document.getElementById(toast._id);\r\n\r\n            if (!toastElement) {\r\n                throw new Error(\"[ToastMyNuts] Could not find toast with ID \" + toast._id);\r\n            }\r\n\r\n            let heightOffset = baseHeightOffset;\r\n\r\n            for (let j = i + 1; j < this._toasts.length; ++j) {\r\n                const toast = this._toasts[j];\r\n                const toastElement = document.getElementById(toast._id);\r\n\r\n                if (!toastElement) {\r\n                    throw new Error(\"[ToastMyNuts] Could not find toast with ID \" + toast._id);\r\n                }\r\n\r\n                let initialHeight = parseFloat(toastElement.style.getPropertyValue(\"--_initial-height\"));\r\n\r\n                heightOffset += initialHeight;\r\n            }\r\n\r\n            toastElement.style.setProperty(\"--_height-offset\", `${heightOffset}px`);\r\n            toastElement.style.setProperty(\"--_idx\", (this._toasts.length - i).toString());\r\n            toastElement.removeAttribute(\"data-front-toast\");\r\n\r\n            if (this._toasts.length - i >= maxVisibleToasts) {\r\n                if (toastElement.getAttribute(\"data-toast-state\") !== \"closing\") {\r\n                    toastElement.setAttribute(\"data-toast-state\", \"hidden\");\r\n                    toastElement.setAttribute(\"aria-hidden\", \"true\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @returns {HTMLOListElement}\r\n     */\r\n    _getOrCreateToastContainer() {\r\n        const toastContainer = document.getElementById(TOAST_CONTAINER_ID);\r\n\r\n        if (!toastContainer) {\r\n            const toastWrapper = document.createElement(\"div\");\r\n\r\n            toastWrapper.id = TOAST_WRAPPER_ID;\r\n            toastWrapper.setAttribute(\"aria-label\", \"Notifications (Alt + T)\");\r\n\r\n            const toastContainer = document.createElement(\"ol\");\r\n\r\n            toastContainer.id = TOAST_CONTAINER_ID;\r\n            toastContainer.setAttribute(\"data-position-x\", Toaster._config?.position?.x || TOAST_DEFAULT_POSITION.x);\r\n            toastContainer.setAttribute(\"data-position-y\", Toaster._config?.position?.y || TOAST_DEFAULT_POSITION.y);\r\n            toastContainer.setAttribute(\"data-expanded\", \"false\");\r\n\r\n            if (Toaster._config?.stackable === false) {\r\n                Toaster._toastContainerMouseEnterListener = () => {\r\n                    if (toastContainer.getAttribute(\"data-did-toggle-expansion\") === \"true\") {\r\n                        return;\r\n                    }\r\n\r\n                    if (Toaster._mouseLeaveEnterListenerDebouncer) {\r\n                        clearTimeout(Toaster._mouseLeaveEnterListenerDebouncer);\r\n                    }\r\n\r\n                    toastContainer.setAttribute(\"data-expanded\", \"true\");\r\n                }\r\n\r\n                Toaster._toastContainerMouseLeaveListener = () => {\r\n                    // Add a debounce to prevent flickering\r\n                    Toaster._mouseLeaveEnterListenerDebouncer = setTimeout(() => {\r\n                        if (toastContainer.getAttribute(\"data-did-toggle-expansion\") === \"true\") {\r\n                            return;\r\n                        }\r\n\r\n                        toastContainer.setAttribute(\"data-expanded\", \"false\");\r\n                    }, 50);\r\n                };\r\n\r\n                Toaster._toastContainerKeyDownListener = (e) => {\r\n                    if (e.altKey && e.code === \"KeyT\") {\r\n                        if (toastContainer.getAttribute(\"data-did-toggle-expansion\") === \"true\") {\r\n                            return;\r\n                        }\r\n\r\n                        if (Toaster._mouseLeaveEnterListenerDebouncer) {\r\n                            clearTimeout(Toaster._mouseLeaveEnterListenerDebouncer);\r\n                        }\r\n\r\n                        toastContainer.setAttribute(\"data-expanded\", toastContainer.getAttribute(\"data-expanded\") === \"true\" ? \"false\" : \"true\");\r\n                        toastContainer.setAttribute(\"data-did-toggle-expansion\", \"true\");\r\n                    }\r\n                };\r\n\r\n                Toaster._toastContainerKeyUpListener = (e) => {\r\n                    if (e.code === \"KeyT\") {\r\n                        toastContainer.setAttribute(\"data-did-toggle-expansion\", \"false\");\r\n                    }\r\n                };\r\n\r\n                toastContainer.addEventListener(\"pointerenter\", Toaster._toastContainerMouseEnterListener);\r\n                toastContainer.addEventListener(\"pointerleave\", Toaster._toastContainerMouseLeaveListener);\r\n                window.addEventListener(\"keydown\", Toaster._toastContainerKeyDownListener);\r\n                window.addEventListener(\"keyup\", Toaster._toastContainerKeyUpListener);\r\n            }\r\n\r\n            toastWrapper.appendChild(toastContainer);\r\n            document.body.appendChild(toastWrapper);\r\n\r\n            return toastContainer;\r\n        }\r\n\r\n        if (!(toastContainer instanceof HTMLOListElement)) {\r\n            throw new Error(\"[ToastMyNuts] Colliding ID \" + TOAST_CONTAINER_ID + \".\");\r\n        }\r\n\r\n        return toastContainer;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @param {string} message\r\n     * @returns {HTMLDivElement}\r\n     */\r\n    _createMessageElement(message) {\r\n        const messageElement = document.createElement(\"div\");\r\n\r\n        messageElement.textContent = message;\r\n        messageElement.classList.add(TOAST_MESSAGE_CLASS);\r\n\r\n        return messageElement;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @param {string} toastId\r\n     * @param {ToastType} type\r\n     *\r\n     * @returns {HTMLLIElement}\r\n     */\r\n    _createToastElement(toastId, type) {\r\n        const toastElement = document.createElement(\"li\");\r\n\r\n        toastElement.id = toastId;\r\n        toastElement.classList.add(TOAST_CLASS);\r\n        toastElement.style.setProperty(\"--_idx\", \"0\");\r\n        toastElement.style.setProperty(\"--_z-idx\", this._toasts.length.toString());\r\n        toastElement.setAttribute(\"data-toast-type\", type);\r\n        toastElement.setAttribute(\"data-toast-state\", \"entering\");\r\n        toastElement.setAttribute(\"aria-live\", \"polite\");\r\n        toastElement.setAttribute(\"aria-atomic\", \"true\");\r\n        toastElement.setAttribute(\"data-front-toast\", \"true\");\r\n\r\n        return toastElement;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @param {string} toastId\r\n     * @return {[HTMLButtonElement, AbortController]}\r\n     */\r\n    _createCloseBtn(toastId) {\r\n        const closeBtnAbortController = new AbortController();\r\n        const closeBtn = document.createElement(\"button\");\r\n\r\n        closeBtn.type = \"button\";\r\n        closeBtn.setAttribute(\"aria-label\", \"Close notification\");\r\n        closeBtn.innerHTML = `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" fill=\"currentColor\" class=\"w-4 h-4\"><path d=\"M5.28 4.22a.75.75 0 0 0-1.06 1.06L6.94 8l-2.72 2.72a.75.75 0 1 0 1.06 1.06L8 9.06l2.72 2.72a.75.75 0 1 0 1.06-1.06L9.06 8l2.72-2.72a.75.75 0 0 0-1.06-1.06L8 6.94 5.28 4.22Z\" /></svg>`;\r\n        closeBtn.classList.add(TOAST_CLOSE_BTN_CLASS);\r\n\r\n        closeBtn.addEventListener(\"click\", () => {\r\n            if (Toaster._config && Toaster._config.ignoreErrors) {\r\n                try {\r\n                    this.removeToast(toastId);\r\n                } catch (_err) {}\r\n            } else {\r\n                this.removeToast(toastId);\r\n            }\r\n        }, { signal: closeBtnAbortController.signal });\r\n\r\n        return [closeBtn, closeBtnAbortController];\r\n    }\r\n}\r\n", "//@ts-check\r\nimport { Toaster } from \"./toaster\";\r\n\r\n/**\r\n * This is used internally and is not available as an external function.\r\n * Gets the config from\r\n *\r\n * ```html\r\n * <meta name=\"toastmynuts-config\" content=\"{}\">\r\n * ```\r\n *\r\n * A config object is a JSON object that contains the following properties:\r\n * - {@link ToastPosition} `position` - The position of the toasts.\r\n *\r\n * @returns {ToastConfig | undefined} The config object.\r\n */\r\nfunction getConfig() {\r\n    const metaTag = document.querySelector(\"meta[name='toastmynuts:config']\");\r\n\r\n    if (!metaTag) {\r\n        return undefined;\r\n    }\r\n\r\n    const rawConfig = metaTag.getAttribute(\"content\");\r\n\r\n    if (rawConfig) {\r\n        const parsedConfig = JSON.parse(rawConfig);\r\n\r\n        return parsedConfig;\r\n    }\r\n\r\n    return undefined;\r\n}\r\n\r\nconst config = getConfig();\r\nconst toast = Toaster.getInstance(config);\r\n\r\n/**\r\n * @param {string} message\r\n * @param {ToastType} [type]\r\n */\r\nfunction create(message, type) {\r\n    if (config && config.ignoreErrors) {\r\n        try {\r\n            toast.addToast(message, type);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    } else {\r\n        toast.addToast(message, type);\r\n    }\r\n}\r\n\r\n/**\r\n * @param {string} toastId\r\n */\r\nfunction remove(toastId) {\r\n    if (config && config.ignoreErrors) {\r\n        try {\r\n            toast.removeToast(toastId);\r\n        } catch (error) {}\r\n    } else {\r\n        toast.removeToast(toastId);\r\n    }\r\n}\r\n\r\n// @ts-ignore\r\nwindow.ToastMyNuts = Object.freeze({\r\n    create,\r\n    remove\r\n});\r\n"],
  "mappings": "MAGO,IAAMA,EAAqB,kBACrBC,EAAmB,yBACnBC,EAAc,uBACdC,EAAsB,yBACtBC,EAAwB,2BACxBC,EAAyB,CAAE,EAAG,SAAU,EAAG,KAAM,EACjDC,EAA2B,EAEjC,SAASC,GAAc,CAC1B,OAAO,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,MAAM,CAAC,CAC7C,CAMO,IAAMC,EAAN,MAAMC,CAAQ,CAKjB,OAAO,UAMP,QAYA,kBAMA,OAAO,QAMP,OAAO,kCAMP,OAAO,kCAMP,OAAO,+BAMP,OAAO,6BAMP,OAAO,kCAKP,aAAc,CACV,KAAK,QAAU,CAAC,EAChB,KAAK,kBAAoB,CAAC,CAC9B,CAMA,OAAO,YAAYC,EAAQ,CACvB,OAAKD,EAAQ,YACTA,EAAQ,UAAY,IAAIA,EACxBA,EAAQ,QAAUC,GAGfD,EAAQ,SACnB,CAMA,MAAM,SAASE,EAASC,EAAO,UAAW,CACtC,IAAMC,EAAiB,KAAK,2BAA2B,EACjDC,EAAUP,EAAY,EACtB,CACFQ,EACAC,CACJ,EAAI,KAAK,gBAAgBF,CAAO,EAC1BG,EAAe,KAAK,oBAAoBH,EAASF,CAAI,EACrDM,EAAyB,SAAS,cAAc,KAAK,EACrDC,EAAiB,KAAK,sBAAsBR,CAAO,EACnDS,EAAU,WAAW,IAAM,CAC7B,GAAIX,EAAQ,SAAWA,EAAQ,QAAQ,aACnC,GAAI,CACA,KAAK,YAAYK,CAAO,CAC5B,MAAe,CAAC,MAEhB,KAAK,YAAYA,CAAO,CAEhC,EAAG,GAAc,EAEjBI,EAAuB,YAAYC,CAAc,EACjDD,EAAuB,YAAYH,CAAQ,EAC3CE,EAAa,YAAYC,CAAsB,EAC/CL,EAAe,QAAQI,CAAY,EAEnC,IAAMI,EAAiBJ,EAAa,MAAM,OAE1CA,EAAa,MAAM,OAAS,OAE5B,IAAMK,EAAeL,EAAa,sBAAsB,EAAE,OACpDM,EAAqB,GAAGD,CAAY,KAE1C,OAAAL,EAAa,MAAM,OAASI,EAC5BR,EAAe,MAAM,YAAY,wBAAyBU,CAAkB,EAC5EN,EAAa,MAAM,YAAY,oBAAqBM,CAAkB,EAEtEN,EAAa,gBAAgB,kBAAkB,EAC/C,KAAK,gBAAgBK,CAAY,EAEjC,KAAK,QAAQ,KAAK,CACd,SAAUX,EACV,MAAOC,EACP,aAAc,CAACI,CAAuB,EACtC,SAAUI,EACV,UAAW,IACX,IAAKN,CACT,CAAC,EAEMA,CACX,CAKA,YAAYA,EAAS,CAIjB,IAAIU,EAIAC,EAEJ,QAAS,EAAI,EAAG,EAAI,KAAK,QAAQ,OAAQ,EAAE,EACnC,KAAK,QAAQ,CAAC,EAAE,MAAQX,IACxBU,EAAQ,KAAK,QAAQ,CAAC,EACtBC,EAAW,GAInB,GAAI,CAACD,GAASC,IAAa,OACvB,MAAM,IAAI,MAAM,8CAAgDX,EAAU,YAAY,EAM1F,IAAMG,EAAe,SAAS,eAAeO,EAAM,GAAG,EAEtD,GAAI,CAACP,EACD,MAAM,IAAI,MAAM,8CAAgDH,EAAU,aAAa,EAK3F,GAFkBG,EAAa,aAAa,kBAAkB,IAAM,UAGhE,OAKJ,IAFAA,EAAa,aAAa,mBAAoB,SAAS,EAEhDO,EAAM,aAAa,SAAW,GACjCA,EAAM,aAAa,IAAI,GAAG,MAAM,EAGpC,IAAME,EAAiC,WAAW,iBAAiBT,CAAY,EAAE,kBAAkB,EACnG,KAAK,cAAcQ,CAAQ,EAC3B,KAAK,kBAAkB,KAAKD,CAAK,EAI7BA,EAAM,WAAa,QACnB,aAAaA,EAAM,QAAQ,EAG/B,KAAK,QAAQ,OAAOC,EAAU,CAAC,EAE/B,WAAW,IAAM,CAOb,IAAID,EACAC,EAEJ,QAASE,EAAI,EAAGA,EAAI,KAAK,kBAAkB,OAAQ,EAAEA,EAC7C,KAAK,kBAAkBA,CAAC,EAAE,MAAQb,IAClCU,EAAQ,KAAK,kBAAkBG,CAAC,EAChCF,EAAWE,GAInB,GAAI,CAACH,GAASC,IAAa,OACvB,MAAM,IAAI,MAAM,8CAAgDX,EAAU,YAAY,EAW1F,GARqB,SAAS,eAAeU,EAAM,GAAG,GAKxC,OAAO,EACrB,KAAK,kBAAkB,OAAOC,EAAU,CAAC,EAErC,KAAK,QAAQ,SAAW,EAAG,CAC3B,IAAMG,EAAe,SAAS,eAAe3B,CAAgB,EACvDY,EAAiB,SAAS,eAAeb,CAAkB,EAE7DS,EAAQ,mCACRI,GAAgB,oBAAoB,eAAgBJ,EAAQ,iCAAiC,EAG7FA,EAAQ,mCACRI,GAAgB,oBAAoB,eAAgBJ,EAAQ,iCAAiC,EAG7FA,EAAQ,gCACR,OAAO,oBAAoB,UAAWA,EAAQ,8BAA8B,EAG5EA,EAAQ,8BACR,OAAO,oBAAoB,QAASA,EAAQ,4BAA4B,EAG5EmB,GAAc,OAAO,CACzB,CACJ,EAAGF,EAAiC,GAAI,CAC5C,CAKA,wBAAyB,CACrB,QAASC,EAAI,EAAGA,EAAI,KAAK,QAAQ,OAAQ,EAAEA,EAAG,CAC1C,IAAMH,EAAQ,KAAK,QAAQG,CAAC,EAExBH,EAAM,WACN,aAAaA,EAAM,QAAQ,EAC3B,KAAK,QAAQG,CAAC,EAAE,SAAW,OAEnC,CACJ,CAOA,cAAcE,EAAO,CACjB,IAAMC,EAAmBrB,EAAQ,SAAS,kBAAoBH,EAE9D,QAASqB,EAAI,EAAGA,EAAIE,EAAO,EAAEF,EAAG,CAC5B,IAAMH,EAAQ,KAAK,QAAQG,CAAC,EAE5B,GAAI,CAACH,EACD,MAAM,IAAI,MAAM,iDAAmDG,EAAI,YAAY,EAMvF,IAAMV,EAAe,SAAS,eAAeO,EAAM,GAAG,EAEtD,GAAI,CAACP,EACD,MAAM,IAAI,MAAM,8CAAgDO,EAAM,IAAM,aAAa,EAG7F,IAAIO,EAAe,EAGnB,QAASC,EAAIL,EAAI,EAAGK,EAAI,KAAK,QAAQ,OAAQ,EAAEA,EAAG,CAE9C,GAAIA,IAAMH,EACN,SAGJ,IAAML,EAAQ,KAAK,QAAQQ,CAAC,EAKtBf,EAAe,SAAS,eAAeO,EAAM,GAAG,EAEtD,GAAI,CAACP,EACD,MAAM,IAAI,MAAM,8CAAgDO,EAAM,IAAM,aAAa,EAG7F,IAAMS,EAAgB,WAAWhB,EAAa,MAAM,iBAAiB,mBAAmB,CAAC,EAEzFc,GAAgBE,CACpB,CAEAhB,EAAa,MAAM,YAAY,mBAAoB,GAAGc,CAAY,IAAI,EAEtEd,EAAa,MAAM,YAAY,UAAW,KAAK,QAAQ,OAASU,EAAI,GAAG,SAAS,CAAC,EAE7EA,IAAM,KAAK,QAAQ,OAAS,GAC5BV,EAAa,aAAa,mBAAoB,MAAM,EAGpD,KAAK,QAAQ,OAASU,GAAKG,EAAmB,GAC1Cb,EAAa,aAAa,kBAAkB,IAAM,WAClDA,EAAa,gBAAgB,kBAAkB,EAC/CA,EAAa,gBAAgB,aAAa,EAGtD,CAEA,QAASU,EAAIE,EAAQ,EAAGF,EAAI,KAAK,QAAQ,OAAQ,EAAEA,EAAG,CAClD,IAAMH,EAAQ,KAAK,QAAQG,CAAC,EAItBV,EAAe,SAAS,eAAeO,EAAM,GAAG,EAEtD,GAAI,CAACP,EACD,MAAM,IAAI,MAAM,8CAAgDO,EAAM,IAAM,aAAa,EAG7FP,EAAa,MAAM,YAAY,YAAaU,EAAI,GAAG,SAAS,CAAC,CACjE,CACJ,CAOA,gBAAgBO,EAAkB,CAC9B,IAAMJ,EAAmBrB,EAAQ,SAAS,kBAAoBH,EAE9D,QAASqB,EAAI,EAAGA,EAAI,KAAK,QAAQ,OAAQ,EAAEA,EAAG,CAC1C,IAAMH,EAAQ,KAAK,QAAQG,CAAC,EACtBV,EAAe,SAAS,eAAeO,EAAM,GAAG,EAEtD,GAAI,CAACP,EACD,MAAM,IAAI,MAAM,8CAAgDO,EAAM,GAAG,EAG7E,IAAIO,EAAeG,EAEnB,QAASF,EAAIL,EAAI,EAAGK,EAAI,KAAK,QAAQ,OAAQ,EAAEA,EAAG,CAC9C,IAAMR,EAAQ,KAAK,QAAQQ,CAAC,EACtBf,EAAe,SAAS,eAAeO,EAAM,GAAG,EAEtD,GAAI,CAACP,EACD,MAAM,IAAI,MAAM,8CAAgDO,EAAM,GAAG,EAG7E,IAAIS,EAAgB,WAAWhB,EAAa,MAAM,iBAAiB,mBAAmB,CAAC,EAEvFc,GAAgBE,CACpB,CAEAhB,EAAa,MAAM,YAAY,mBAAoB,GAAGc,CAAY,IAAI,EACtEd,EAAa,MAAM,YAAY,UAAW,KAAK,QAAQ,OAASU,GAAG,SAAS,CAAC,EAC7EV,EAAa,gBAAgB,kBAAkB,EAE3C,KAAK,QAAQ,OAASU,GAAKG,GACvBb,EAAa,aAAa,kBAAkB,IAAM,YAClDA,EAAa,aAAa,mBAAoB,QAAQ,EACtDA,EAAa,aAAa,cAAe,MAAM,EAG3D,CACJ,CAMA,4BAA6B,CACzB,IAAMJ,EAAiB,SAAS,eAAeb,CAAkB,EAEjE,GAAI,CAACa,EAAgB,CACjB,IAAMe,EAAe,SAAS,cAAc,KAAK,EAEjDA,EAAa,GAAK3B,EAClB2B,EAAa,aAAa,aAAc,yBAAyB,EAEjE,IAAMf,EAAiB,SAAS,cAAc,IAAI,EAElD,OAAAA,EAAe,GAAKb,EACpBa,EAAe,aAAa,kBAAmBJ,EAAQ,SAAS,UAAU,GAAKJ,EAAuB,CAAC,EACvGQ,EAAe,aAAa,kBAAmBJ,EAAQ,SAAS,UAAU,GAAKJ,EAAuB,CAAC,EACvGQ,EAAe,aAAa,gBAAiB,OAAO,EAEhDJ,EAAQ,SAAS,YAAc,KAC/BA,EAAQ,kCAAoC,IAAM,CAC1CI,EAAe,aAAa,2BAA2B,IAAM,SAI7DJ,EAAQ,mCACR,aAAaA,EAAQ,iCAAiC,EAG1DI,EAAe,aAAa,gBAAiB,MAAM,EACvD,EAEAJ,EAAQ,kCAAoC,IAAM,CAE9CA,EAAQ,kCAAoC,WAAW,IAAM,CACrDI,EAAe,aAAa,2BAA2B,IAAM,QAIjEA,EAAe,aAAa,gBAAiB,OAAO,CACxD,EAAG,EAAE,CACT,EAEAJ,EAAQ,+BAAkC0B,GAAM,CAC5C,GAAIA,EAAE,QAAUA,EAAE,OAAS,OAAQ,CAC/B,GAAItB,EAAe,aAAa,2BAA2B,IAAM,OAC7D,OAGAJ,EAAQ,mCACR,aAAaA,EAAQ,iCAAiC,EAG1DI,EAAe,aAAa,gBAAiBA,EAAe,aAAa,eAAe,IAAM,OAAS,QAAU,MAAM,EACvHA,EAAe,aAAa,4BAA6B,MAAM,CACnE,CACJ,EAEAJ,EAAQ,6BAAgC0B,GAAM,CACtCA,EAAE,OAAS,QACXtB,EAAe,aAAa,4BAA6B,OAAO,CAExE,EAEAA,EAAe,iBAAiB,eAAgBJ,EAAQ,iCAAiC,EACzFI,EAAe,iBAAiB,eAAgBJ,EAAQ,iCAAiC,EACzF,OAAO,iBAAiB,UAAWA,EAAQ,8BAA8B,EACzE,OAAO,iBAAiB,QAASA,EAAQ,4BAA4B,GAGzEmB,EAAa,YAAYf,CAAc,EACvC,SAAS,KAAK,YAAYe,CAAY,EAE/Bf,CACX,CAEA,GAAI,EAAEA,aAA0B,kBAC5B,MAAM,IAAI,MAAM,8BAAgCb,EAAqB,GAAG,EAG5E,OAAOa,CACX,CAOA,sBAAsBF,EAAS,CAC3B,IAAMQ,EAAiB,SAAS,cAAc,KAAK,EAEnD,OAAAA,EAAe,YAAcR,EAC7BQ,EAAe,UAAU,IAAIhB,CAAmB,EAEzCgB,CACX,CASA,oBAAoBL,EAASF,EAAM,CAC/B,IAAMK,EAAe,SAAS,cAAc,IAAI,EAEhD,OAAAA,EAAa,GAAKH,EAClBG,EAAa,UAAU,IAAIf,CAAW,EACtCe,EAAa,MAAM,YAAY,SAAU,GAAG,EAC5CA,EAAa,MAAM,YAAY,WAAY,KAAK,QAAQ,OAAO,SAAS,CAAC,EACzEA,EAAa,aAAa,kBAAmBL,CAAI,EACjDK,EAAa,aAAa,mBAAoB,UAAU,EACxDA,EAAa,aAAa,YAAa,QAAQ,EAC/CA,EAAa,aAAa,cAAe,MAAM,EAC/CA,EAAa,aAAa,mBAAoB,MAAM,EAE7CA,CACX,CAOA,gBAAgBH,EAAS,CACrB,IAAME,EAA0B,IAAI,gBAC9BD,EAAW,SAAS,cAAc,QAAQ,EAEhD,OAAAA,EAAS,KAAO,SAChBA,EAAS,aAAa,aAAc,oBAAoB,EACxDA,EAAS,UAAY,kSACrBA,EAAS,UAAU,IAAIX,CAAqB,EAE5CW,EAAS,iBAAiB,QAAS,IAAM,CACrC,GAAIN,EAAQ,SAAWA,EAAQ,QAAQ,aACnC,GAAI,CACA,KAAK,YAAYK,CAAO,CAC5B,MAAe,CAAC,MAEhB,KAAK,YAAYA,CAAO,CAEhC,EAAG,CAAE,OAAQE,EAAwB,MAAO,CAAC,EAEtC,CAACD,EAAUC,CAAuB,CAC7C,CACJ,ECxhBA,SAASoB,GAAY,CACjB,IAAMC,EAAU,SAAS,cAAc,iCAAiC,EAExE,GAAI,CAACA,EACD,OAGJ,IAAMC,EAAYD,EAAQ,aAAa,SAAS,EAEhD,GAAIC,EAGA,OAFqB,KAAK,MAAMA,CAAS,CAMjD,CAEA,IAAMC,EAASH,EAAU,EACnBI,EAAQC,EAAQ,YAAYF,CAAM,EAMxC,SAASG,EAAOC,EAASC,EAAM,CAC3B,GAAIL,GAAUA,EAAO,aACjB,GAAI,CACAC,EAAM,SAASG,EAASC,CAAI,CAChC,OAASC,EAAO,CACZ,QAAQ,MAAMA,CAAK,CACvB,MAEAL,EAAM,SAASG,EAASC,CAAI,CAEpC,CAKA,SAASE,EAAOC,EAAS,CACrB,GAAIR,GAAUA,EAAO,aACjB,GAAI,CACAC,EAAM,YAAYO,CAAO,CAC7B,MAAgB,CAAC,MAEjBP,EAAM,YAAYO,CAAO,CAEjC,CAGA,OAAO,YAAc,OAAO,OAAO,CAC/B,OAAAL,EACA,OAAAI,CACJ,CAAC",
  "names": ["TOAST_CONTAINER_ID", "TOAST_WRAPPER_ID", "TOAST_CLASS", "TOAST_MESSAGE_CLASS", "TOAST_CLOSE_BTN_CLASS", "TOAST_DEFAULT_POSITION", "TOAST_MAX_VISIBLE_TOASTS", "genRandomId", "Toaster", "_Toaster", "config", "message", "type", "toastContainer", "toastId", "closeBtn", "closeBtnAbortController", "toastElement", "toastRelativeContainer", "messageElement", "timeout", "originalHeight", "packedHeight", "packedHeightString", "toast", "toastIdx", "toastElementTransitionDuration", "i", "toastWrapper", "start", "maxVisibleToasts", "heightOffset", "j", "initialHeight", "baseHeightOffset", "e", "getConfig", "metaTag", "rawConfig", "config", "toast", "Toaster", "create", "message", "type", "error", "remove", "toastId"]
}
