---
import { defaultLocale } from "@/lib/consts";
import siteData from "../data/site.json";

type TwitterPlayerCard = {
	card: "player";
	player: {
		iframeUrl: string;
		streamUrl: string;
		width: number;
		height: number;
	};
};

type TwitterSummaryCard = {
	card: "summary" | "summary_large_image";
	image?: {
		url: string;
		alt: string;
	};
};

export type SeoProps = {
	title?: string;
	description?: string;
	og?: {
		title?: string;
		description?: string;
		image?: {
			url: string;
			width: number;
			height: number;
			alt: string;
			type: string;
		};
	};
	twitter?: {
		title?: string;
		description?: string;
	} & (TwitterPlayerCard | TwitterSummaryCard);
};

export type Props = SeoProps;

const locale = Astro.currentLocale || defaultLocale;
const props = Astro.props;

const siteDescription =
	siteData.description.translations[
		locale as keyof typeof siteData.description.translations
	] || siteData.description.text;
const siteTitle =
	siteData.title.translations[
		locale as keyof typeof siteData.title.translations
	] || siteData.title.text;
---

<title>{props.title || siteTitle}</title>
<meta name="description" content={props.description || siteDescription} />
<meta
	property="og:title"
	content={props.og?.title || props.title || siteTitle}
/>
<meta
	property="og:description"
	content={props.og?.description || props.description || siteDescription}
/>
<meta property="og:type" content="website" />
{
	Astro.site && (
		<meta
			property="og:url"
			content={Astro.site.origin + Astro.url.pathname}
		/>
	)
}
<meta name="og:locale" content={locale} />
{
	props.og?.image && (
		<>
			<meta
				property="og:image"
				content={Astro.site!.origin + props.og.image.url}
			/>
			<meta
				property="og:image:secure_url"
				content={Astro.site!.origin + props.og.image.url}
			/>
			<meta
				property="og:image:width"
				content={props.og.image.width.toString()}
			/>
			<meta
				property="og:image:height"
				content={props.og.image.height.toString()}
			/>
			<meta property="og:image:alt" content={props.og.image.alt} />
			<meta property="og:image:type" content={props.og.image.type} />
		</>
	)
}

<meta name="twitter:card" content={props.twitter?.card || "summary"} />
<meta
	name="twitter:title"
	content={props.twitter?.title || props.title || siteTitle}
/>
<meta
	name="twitter:description"
	content={props.twitter?.description || props.description || siteDescription}
/>

{
	props.twitter?.card === "player" && (
		<>
			<meta
				name="twitter:player"
				content={props.twitter.player.iframeUrl}
			/>
			<meta
				name="twitter:player:stream"
				content={props.twitter.player.streamUrl}
			/>
			<meta
				name="twitter:player:width"
				content={props.twitter.player.width.toString()}
			/>
			<meta
				name="twitter:player:height"
				content={props.twitter.player.height.toString()}
			/>
		</>
	)
}

{
	props.twitter?.card === "summary_large_image" && props.twitter.image && (
		<>
			{Astro.site ? (
				<meta
					name="twitter:image"
					content={Astro.site.origin + props.twitter.image.url}
				/>
			) : (
				<meta name="twitter:image" content={props.twitter.image.url} />
			)}
			<meta name="twitter:image:alt" content={props.twitter.image.alt} />
		</>
	)
}
